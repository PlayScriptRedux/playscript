<Type Name="Console" FullName="System.Console" FullNameSP="System_Console" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed Console extends System.Object" />
  <TypeSignature Language="C#" Value="public static class Console" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed Console extends System.Object" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>This type is safe for multithreaded operations. </ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Represents the standard input, output, and error streams
      for console applications.</para>
    </summary>
    <remarks>
      <para>The <see cref="T:System.Console" />
class provides basic input and output support for applications that
read from and write characters to the console. If the console does not exist,
as in a GUI application, writing to the console produces
no result, and no exception is raised.</para>
      <para> 
   The standard input, output, and
   error streams are represented by properties, and are automatically associated with
   the console when the application starts. Applications can redirect these properties to other streams;
   for example, streams associated with files instead of the console. <block subset="none" type="note">For additional information see the <see cref="M:System.Console.SetIn(System.IO.TextReader)" />, <see cref="M:System.Console.SetOut(System.IO.TextWriter)" />, and
<see cref="M:System.Console.SetError(System.IO.TextWriter)" /> methods.</block> By default, the read 
methods in this class use the standard input stream and the write methods use
the standard output
stream.</para>
      <para> The
   write methods support writing data with or without automatically appending carriage
   return and linefeed characters. This enables the writing of strings, formatted strings, arrays of characters,
   instances of primitive types, and arbitrary objects without first having to convert them
   to strings.</para>
      <para>This class uses synchronized <see cref="T:System.IO.TextReader" /> and
<see cref="T:System.IO.TextWriter" /> instances. Multiple threads can concurrently read 
from and/or write to an instance of this
type.</para>
    </remarks>
    <example>
      <para>The following example demonstrates the use of basic <see cref="T:System.Console" /> input and output
   functions. The program waits for the user to enter a name.</para>
      <code lang="C#">
using System;

public class ConsoleTest {
   public static void Main() {       
      Console.Write("Hello ");
      Console.WriteLine("World!");
      Console.Write("What is your name: ");
      string name = Console.ReadLine();
      Console.Write("Hello, ");
      Console.Write(name);
      Console.WriteLine("!");
   }
}
</code>
      <para>The output for a user who entered the name "Fred" is</para>
      <c>
        <para>Hello World!</para>
        <para>What is your name: Fred</para>
        <para>Hello, Fred!</para>
      </c>
    </example>
  </Docs>
  <Members>
    <Member MemberName="BackgroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor BackgroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor BackgroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Beep">
      <MemberSignature Language="C#" Value="public static void Beep (int frequency, int duration);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Beep(int32 frequency, int32 duration) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="frequency" Type="System.Int32" />
        <Parameter Name="duration" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="frequency">To be added.</param>
        <param name="duration">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="BufferHeight">
      <MemberSignature Language="C#" Value="public static int BufferHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="BufferWidth">
      <MemberSignature Language="C#" Value="public static int BufferWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BufferWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="CancelKeyPress">
      <MemberSignature Language="C#" Value="public static event ConsoleCancelEventHandler CancelKeyPress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ConsoleCancelEventHandler CancelKeyPress" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="CapsLock">
      <MemberSignature Language="C#" Value="public static bool CapsLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CapsLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="CursorLeft">
      <MemberSignature Language="C#" Value="public static int CursorLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="CursorSize">
      <MemberSignature Language="C#" Value="public static int CursorSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CursorTop">
      <MemberSignature Language="C#" Value="public static int CursorTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CursorTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="CursorVisible">
      <MemberSignature Language="C#" Value="public static bool CursorVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CursorVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="ILASM" Value=".property class System.IO.TextWriter Error { public hidebysig static specialname class System.IO.TextWriter get_Error() }" />
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Error" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the system's standard error output stream.</para>
        </summary>
        <value>
          <para>A synchronized <see cref="T:System.IO.TextWriter" /> object where error
   output is sent.</para>
        </value>
        <remarks>
          <para>This property is read-only.</para>
          <para> This property can be redirected using the <see cref="M:System.Console.SetError(System.IO.TextWriter)" /> method. </para>
          <para>
            <block subset="none" type="note">
   If the application does not have a <see cref="T:System.Console" />, <see cref="P:System.Console.Error" qualify="true" /> behaves
   like <see cref="F:System.IO.TextWriter.Null" qualify="true" />.
</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ForegroundColor">
      <MemberSignature Language="C#" Value="public static ConsoleColor ForegroundColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.ConsoleColor ForegroundColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleColor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="In">
      <MemberSignature Language="ILASM" Value=".property class System.IO.TextReader In { public hidebysig static specialname class System.IO.TextReader get_In() }" />
      <MemberSignature Language="C#" Value="public static System.IO.TextReader In { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextReader In" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the system's standard input stream.</para>
        </summary>
        <value>
          <para>A synchronized <see cref="T:System.IO.TextReader" /> object from which user input is received.</para>
        </value>
        <remarks>
          <para>This property is read-only.</para>
          <para> This property can be redirected using the <see cref="M:System.Console.SetIn(System.IO.TextReader)" /> method. </para>
          <para>
            <block subset="none" type="note">
   
   If the application does not have a <see cref="T:System.Console" />, <see cref="P:System.Console.In" qualify="true" /> behaves like <see cref="F:System.IO.TextReader.Null" qualify="true" />.
</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding InputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="IsErrorRedirected">
      <MemberSignature Language="C#" Value="public static bool IsErrorRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsErrorRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsInputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsInputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutputRedirected">
      <MemberSignature Language="C#" Value="public static bool IsOutputRedirected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsOutputRedirected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyAvailable">
      <MemberSignature Language="C#" Value="public static bool KeyAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeyAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="LargestWindowHeight">
      <MemberSignature Language="C#" Value="public static int LargestWindowHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LargestWindowWidth">
      <MemberSignature Language="C#" Value="public static int LargestWindowWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LargestWindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">To be added.</param>
        <param name="sourceTop">To be added.</param>
        <param name="sourceWidth">To be added.</param>
        <param name="sourceHeight">To be added.</param>
        <param name="targetLeft">To be added.</param>
        <param name="targetTop">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="MoveBufferArea">
      <MemberSignature Language="C#" Value="public static void MoveBufferArea (int sourceLeft, int sourceTop, int sourceWidth, int sourceHeight, int targetLeft, int targetTop, char sourceChar, ConsoleColor sourceForeColor, ConsoleColor sourceBackColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveBufferArea(int32 sourceLeft, int32 sourceTop, int32 sourceWidth, int32 sourceHeight, int32 targetLeft, int32 targetTop, char sourceChar, valuetype System.ConsoleColor sourceForeColor, valuetype System.ConsoleColor sourceBackColor) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceLeft" Type="System.Int32" />
        <Parameter Name="sourceTop" Type="System.Int32" />
        <Parameter Name="sourceWidth" Type="System.Int32" />
        <Parameter Name="sourceHeight" Type="System.Int32" />
        <Parameter Name="targetLeft" Type="System.Int32" />
        <Parameter Name="targetTop" Type="System.Int32" />
        <Parameter Name="sourceChar" Type="System.Char" />
        <Parameter Name="sourceForeColor" Type="System.ConsoleColor" />
        <Parameter Name="sourceBackColor" Type="System.ConsoleColor" />
      </Parameters>
      <Docs>
        <param name="sourceLeft">To be added.</param>
        <param name="sourceTop">To be added.</param>
        <param name="sourceWidth">To be added.</param>
        <param name="sourceHeight">To be added.</param>
        <param name="targetLeft">To be added.</param>
        <param name="targetTop">To be added.</param>
        <param name="sourceChar">To be added.</param>
        <param name="sourceForeColor">To be added.</param>
        <param name="sourceBackColor">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="NumberLock">
      <MemberSignature Language="C#" Value="public static bool NumberLock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool NumberLock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardError()" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Returns the standard error stream.</para>
        </summary>
        <returns>
          <para> A new synchronized <see cref="T:System.IO.Stream" /> object that writes to the console.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OpenStandardError">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardError(int32 bufferSize)" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardError (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardError(int32 bufferSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">A <see cref="T:System.Int32" /> that specifies the desired internal stream buffer size.</param>
        <summary>
          <para>Returns the standard error stream.</para>
        </summary>
        <returns>
          <para> A new synchronized <see cref="T:System.IO.Stream" /> object that writes to the console.</para>
        </returns>
        <remarks>
          <para>Buffering console streams is not required to be 
      supported. If it is not supported, the <paramref name="bufferSize" /> parameter is ignored,
      and this method behaves identically to <see cref="M:System.Console.OpenStandardError" />(). If buffering is supported, the buffering behavior of
      the <see cref="T:System.Console" />
      class is implementation-specific.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardInput()" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns the standard input stream.</para>
        </summary>
        <returns>
          <para>A new synchronized <see cref="T:System.IO.Stream" /> object that reads from the console.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OpenStandardInput">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardInput(int32 bufferSize)" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardInput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardInput(int32 bufferSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">A <see cref="T:System.Int32" /> that specifies the desired internal stream buffer size.</param>
        <summary>
          <para> Returns the standard input stream.</para>
        </summary>
        <returns>
          <para>A new synchronized <see cref="T:System.IO.Stream" /> object that reads from the console.</para>
        </returns>
        <remarks>
          <para>Buffering console streams is not required to be 
      supported. If it is not supported, the <paramref name="bufferSize" /> parameter is ignored,
      and this method behaves identically to <see cref="M:System.Console.OpenStandardInput" />(). If buffering is supported, the buffering behavior of
      the <see cref="T:System.Console" />
      class is implementation-specific.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardOutput()" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns the standard output stream.</para>
        </summary>
        <returns>
          <para> A new synchronized <see cref="T:System.IO.Stream" /> object that writes to the console.</para>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OpenStandardOutput">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static class System.IO.Stream OpenStandardOutput(int32 bufferSize)" />
      <MemberSignature Language="C#" Value="public static System.IO.Stream OpenStandardOutput (int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream OpenStandardOutput(int32 bufferSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSize">A <see cref="T:System.Int32" /> that specifies the desired internal stream buffer size.</param>
        <summary>
          <para>Returns the standard output stream. The desired size of the internal buffer
      for the stream is specified.</para>
        </summary>
        <returns>
          <para>A new synchronized <see cref="T:System.IO.Stream" /> object that writes to the console.</para>
        </returns>
        <remarks>
          <para>Buffering console streams is not required to be 
      supported. If it is not supported, the <paramref name="bufferSize" /> parameter is ignored,
      and this method behaves identically to <see cref="M:System.Console.OpenStandardOutput" />(). If buffering is supported, the buffering behavior of
      the <see cref="T:System.Console" />
      class is implementation-specific.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Out">
      <MemberSignature Language="ILASM" Value=".property class System.IO.TextWriter Out { public hidebysig static specialname class System.IO.TextWriter get_Out() }" />
      <MemberSignature Language="C#" Value="public static System.IO.TextWriter Out { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IO.TextWriter Out" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the system's standard output stream.</para>
        </summary>
        <value>
          <para>A synchronized <see cref="T:System.IO.TextWriter" /> object where normal output is sent.</para>
        </value>
        <remarks>
          <para>This property is read-only.</para>
          <para> This property can be redirected using the <see cref="M:System.Console.SetOut(System.IO.TextWriter)" /> method. </para>
          <para>
            <block subset="none" type="note">
   
   If the application does not have a <see cref="T:System.Console" />, <see cref="P:System.Console.Out" qualify="true" /> behaves like <see cref="F:System.IO.TextWriter.Null" qualify="true" />.
</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="OutputEncoding">
      <MemberSignature Language="C#" Value="public static System.Text.Encoding OutputEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Text.Encoding OutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static int32 Read()" />
      <MemberSignature Language="C#" Value="public static int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Read() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Reads the next character from the standard input
      stream.</para>
        </summary>
        <returns>
          <para>The next character from the character source represented
      as a <see cref="T:System.Int32" />
      , or -1 if at the
      end of the
      stream.</para>
        </returns>
        <remarks>
          <para>This method will not return until the read operation is
      terminated; for example, by the user pressing the enter key. If data is
      available, the input stream contains what the user entered, suffixed with the
      environment dependent newline character.
      
   </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="ReadKey">
      <MemberSignature Language="C#" Value="public static ConsoleKeyInfo ReadKey (bool intercept);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.ConsoleKeyInfo ReadKey(bool intercept) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ConsoleKeyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intercept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="intercept">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static string ReadLine()" />
      <MemberSignature Language="C#" Value="public static string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string ReadLine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Reads the next line of characters from the <see cref="P:System.Console.In" /><see cref="T:System.IO.TextReader" />.</para>
        </summary>
        <returns>
          <para> A <see cref="T:System.String" /> containing the next line from the input stream, or
<see langword="null" />
if the end of the input stream has already been reached.
</para>
        </returns>
        <remarks>
          <para> A line is defined as a sequence of characters followed
      by a carriage return (Unicode 0x000d), a line feed (Unicode 0x000a), or a <see cref="P:System.Environment.NewLine" qualify="true" />. The returned string
      does not contain the terminating character(s).
      </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        <exception cref="T:System.OutOfMemoryException">There is insufficient memory to allocate a buffer for the returned string.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ResetColor">
      <MemberSignature Language="C#" Value="public static void ResetColor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetColor() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="SetBufferSize">
      <MemberSignature Language="C#" Value="public static void SetBufferSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetBufferSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="SetCursorPosition">
      <MemberSignature Language="C#" Value="public static void SetCursorPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetCursorPosition(int32 left, int32 top) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="SetError">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void SetError(class System.IO.TextWriter newError)" />
      <MemberSignature Language="C#" Value="public static void SetError (System.IO.TextWriter newError);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetError(class System.IO.TextWriter newError) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newError" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newError">A <see cref="T:System.IO.TextWriter" /> that becomes the new standard error output stream. </param>
        <summary>
          <para> Sets the <see cref="P:System.Console.Error" /> property to the specified <see cref="T:System.IO.TextWriter" /> .</para>
        </summary>
        <remarks>
          <para>This method replaces the <see cref="P:System.Console.Error" /> property
   with a synchronized <see cref="T:System.IO.TextWriter" /> returned by <see cref="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />( <paramref name="newError" /> ).</para>
          <para>
            <block subset="none" type="note">By default, the <see cref="P:System.Console.Error" /> property is set
to the system's standard error stream.</block>
          </para>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="newError" /> is <see langword="null" />. </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">Requires <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> permission.</permission>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="SetIn">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void SetIn(class System.IO.TextReader newIn)" />
      <MemberSignature Language="C#" Value="public static void SetIn (System.IO.TextReader newIn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIn(class System.IO.TextReader newIn) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newIn" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="newIn">A <see cref="T:System.IO.TextReader" /> that becomes the new standard input stream. </param>
        <summary>
          <para> Sets the <see cref="P:System.Console.In" /> property to the specified <see cref="T:System.IO.TextReader" /> .</para>
        </summary>
        <remarks>
          <para>This method replaces the <see cref="P:System.Console.In" /> property with a synchronized <see cref="T:System.IO.TextReader" /> returned
   by <see cref="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />( <paramref name="newIn" /> ).</para>
          <para>
            <block subset="none" type="note">By
   default, the <see cref="P:System.Console.In" /> property
   is set
   to the system's standard input stream.</block>
          </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="newIn" /> is <see langword="null" />. </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">Requires permission to execute unmanaged code. See <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> .</permission>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="SetOut">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void SetOut(class System.IO.TextWriter newOut)" />
      <MemberSignature Language="C#" Value="public static void SetOut (System.IO.TextWriter newOut);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetOut(class System.IO.TextWriter newOut) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newOut" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="newOut">A <see cref="T:System.IO.TextWriter" /> that becomes the new standard output stream.</param>
        <summary>
          <para> Sets the <see cref="P:System.Console.Out" /> property to the specified <see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This method replaces the <see cref="P:System.Console.Out" /> property with a synchronized <see cref="T:System.IO.TextWriter" /> returned
   by <see cref="M:System.IO.TextWriter.Synchronized(System.IO.TextWriter)" />( <paramref name="newOut" /> ).</para>
          <para>
            <block subset="none" type="note">By default, the <see cref="P:System.Console.Out" /> property is set to
the system's standard output stream.</block>
          </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="newOut" /> is <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">Requires permission to execute unmanaged code. See <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /> .</permission>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="SetWindowPosition">
      <MemberSignature Language="C#" Value="public static void SetWindowPosition (int left, int top);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowPosition(int32 left, int32 top) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Int32" />
        <Parameter Name="top" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="left">To be added.</param>
        <param name="top">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="SetWindowSize">
      <MemberSignature Language="C#" Value="public static void SetWindowSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetWindowSize(int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public static string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="TreatControlCAsInput">
      <MemberSignature Language="C#" Value="public static bool TreatControlCAsInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool TreatControlCAsInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="WindowHeight">
      <MemberSignature Language="C#" Value="public static int WindowHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="WindowLeft">
      <MemberSignature Language="C#" Value="public static int WindowLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="WindowTop">
      <MemberSignature Language="C#" Value="public static int WindowTop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowTop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="WindowWidth">
      <MemberSignature Language="C#" Value="public static int WindowWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 WindowWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
        <since version=".NET 2.0" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(bool value)" />
      <MemberSignature Language="C#" Value="public static void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Boolean" /> to write. </param>
        <summary>
          <para>Writes the text representation of a <see cref="T:System.Boolean" /> to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" />.ToString () ).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(valuetype System.Char value)" />
      <MemberSignature Language="C#" Value="public static void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">The Unicode character to write to the text stream. </param>
        <summary>
          <para>Writes a character to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" /> .</para>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(class System.Char[] buffer)" />
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">The Unicode character array to write to the text stream. If <paramref name="buffer" /> is <see langword="null" /> , nothing is written. </param>
        <summary>
          <para>Writes a character array to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" /> .</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />( <paramref name="buffer" />
).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(decimal value)" />
      <MemberSignature Language="C#" Value="public static void Write (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(valuetype System.Decimal value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Decimal" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.Decimal" /> to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write " />(<paramref name="value" />.ToString()).
   </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(float64 value)" />
      <MemberSignature Language="C#" Value="public static void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Double" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.Double" /> to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write " />(<paramref name="value" />.ToString()).
   </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(int32 value)" />
      <MemberSignature Language="C#" Value="public static void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Int32" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.Int32" /> to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" />.ToString()).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(int64 value)" />
      <MemberSignature Language="C#" Value="public static void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Int64" /> to write. </param>
        <summary>
          <para> Writes the text representation of a
      specified <see cref="T:System.Int64" /> to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" />.ToString() ).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(object value)" />
      <MemberSignature Language="C#" Value="public static void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to write. If <paramref name="value" /> is <see langword="null" /> , <see cref="F:System.String.Empty" /> is written. </param>
        <summary>
          <para> Writes the text representation of a specified object to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" />.ToString () ).</para>
          <para>
            <block subset="none" type="note">If <paramref name=" value" /> is <see langword="null" />, no exception is thrown and nothing
is written. Otherwise, the object's <see cref="M:System.Object.ToString" /> method is called to
produce the string representation, and the resulting string is written to the
output stream.</block>
          </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(float32 value)" />
      <MemberSignature Language="C#" Value="public static void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Single" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.Single" /> to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write " />(<paramref name="value" /> 
.ToString()).
</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(string value)" />
      <MemberSignature Language="C#" Value="public static void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String" /> to write. If <paramref name="value" /> is <see langword="null" />, the <see cref="F:System.String.Empty" /> string is written. </param>
        <summary>
          <para> Writes a specified string to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" /> ).</para>
          <para>
            <block subset="none" type="note">If specified value is <see langword="null" /> , nothing is written to the output stream.</block>
          </para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(unsigned int32 value)" />
      <MemberSignature Language="C#" Value="public static void Write (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.UInt32" /> to write. </param>
        <summary>
          <para> Writes the text representation of a
      specified <see cref="T:System.UInt32" /> to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This member is not CLS-compliant. For a CLS-compliant alternative, use 
   <see cref="M:System.Console.Write(System.String,System.Object)" />(<see cref="T:System.Int64" />).</para>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" />.<see langword="ToString" /> ()).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(unsigned int64 value)" />
      <MemberSignature Language="C#" Value="public static void Write (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(unsigned int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.UInt64" /> to write. </param>
        <summary>
          <para> Writes the text representation of a
      specified <see cref="T:System.UInt64" />
      to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
   
   .
   </para>
        </summary>
        <remarks>
          <para>This member is not CLS-compliant. For a CLS-compliant alternative, use 
   <see cref="M:System.Console.Write(System.String,System.Object)" />(<see cref="T:System.Decimal" />).</para>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />(
<paramref name="value" /> .ToString()).</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(string format, object arg0)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">An object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <block subset="none" type="note">
            <para>If the specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (1).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(string format, class System.Object[] arg)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object[] arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg">An array of objects referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <block subset="none" type="note">
            <para>If a specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="format" /> or <paramref name="arg " /> is <see langword="null" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to <paramref name="arg" />.Length.</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(class System.Char[] buffer, int32 index, int32 count)" />
      <MemberSignature Language="C#" Value="public static void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The Unicode character array from which characters are read. </param>
        <param name="index">A <see cref="T:System.Int32" /> that specifies the starting offset in <paramref name="buffer" /> at which to begin reading.</param>
        <param name="count">A <see cref="T:System.Int32" /> that specifies the number of characters to write. </param>
        <summary>
          <para> Writes a subarray of characters to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.Write(System.String,System.Object)" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="Write" />( <paramref name="buffer" />,
<paramref name="index" />, <paramref name="count" /> ).</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <para>(<paramref name="index" /> + <paramref name="count" /> ) is greater than the length of <paramref name="buffer" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is negative.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <see langword="null" />.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(string format, object arg0, object arg1)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">The first object referenced in the format string. </param>
        <param name="arg1">The second object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <block subset="none" type="note">
            <para>If a specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (2).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void Write(string format, object arg0, object arg1, object arg2)" />
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">The first object referenced in the format string. </param>
        <param name="arg1">The second object referenced in the format string. </param>
        <param name="arg2">The third object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>
            <block subset="none" type="note">If a specified
      object is not referenced in the format string, it is ignored.</block>
          </para>
          <para>
            <block subset="none" type="note">For more 
   information on format strings see the <see cref="T:System.String" />
   class overview.</block>
          </para>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="format" /> is <see langword="null" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (3).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public static void Write (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Write(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="arg0">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine()" />
      <MemberSignature Language="C#" Value="public static void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Writes a line terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" /> property. The line terminator can be set using the
<see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property of the <see cref="P:System.Console.Out" /> stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(bool value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(bool value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Boolean" /> to write. </param>
        <summary>
          <para> Writes the text representation of a <see cref="T:System.Boolean" /> followed by
   a line terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" />.ToString() ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(valuetype System.Char value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">The Unicode character to write to the text stream. </param>
        <summary>
          <para> Writes a character followed by a line terminator to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" /> ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(class System.Char[] buffer)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">The Unicode character array to write. </param>
        <summary>
          <para> Writes an array of characters followed by a line
      terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
   .
   </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="buffer" /> ).</para>
          <para>The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="buffer" /> is <see langword="null" />. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(decimal value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (decimal value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(valuetype System.Decimal value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Decimal" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Decimal" /> to write. </param>
        <summary>
          <para>Writes the text representation of a specified <see cref="T:System.Decimal" /> followed by a line terminator to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
. </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine " />(<paramref name="value" />.ToString ()).</para>
          <para>The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" /> property. The
line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property of the <see cref="P:System.Console.Out" /> stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(float64 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Double" /> to write. </param>
        <summary>
          <para>Writes the text representation of a specified <see cref="T:System.Double" /> followed by a line terminator to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
. </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine " />(<paramref name="value" />.ToString ()).</para>
          <para> The default line terminator is the value of the<see cref="P:System.Environment.NewLine" qualify="true" /> property. The
line terminator can be set using the<see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property of the <see cref="P:System.Console.Out" /> stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(int32 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Int32" /> to write. </param>
        <summary>
          <para>Writes the text representation of a specified <see cref="T:System.Int32" /> followed by a line terminator to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
. </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" /> .ToString ()).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(int64 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Int64" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.Int64" /> followed by a line
   terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" />.ToString() ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(object value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">The object to write. If <paramref name="value" /> is <see langword="null" />, only the line terminator is written. </param>
        <summary>
          <para> Writes the text representation of a
      specified object followed by a line terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
   .
   </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" />.ToString() ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(float32 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(float32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.Single" /> to write. </param>
        <summary>
          <para>Writes the text representation of a specified <see cref="T:System.Single" /> followed by a line terminator to the
<see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
. </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine " />(<paramref name="value" />.ToString ()).</para>
          <para>The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" /> stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>1</Excluded>
      <ExcludedLibrary>ExtendedNumerics</ExcludedLibrary>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(string value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.String" /> to write. If <paramref name="value" /> is <see langword="null" />, only the line terminator is written.</param>
        <summary>
          <para> Writes a specified <see cref="T:System.String" /> followed by a line terminator
   to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" /> ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(unsigned int32 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int32 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.UInt32" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.UInt32" /> followed by a
   line terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This member is not CLS-compliant. For a CLS-compliant alternative, use 
   <see cref="M:System.Console.WriteLine" />(<see cref="T:System.Int64" />).</para>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" />.ToString() ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(unsigned int64 value)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(unsigned int64 value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="value">The <see cref="T:System.UInt64" /> to write. </param>
        <summary>
          <para> Writes the text representation of a specified <see cref="T:System.UInt64" /> followed by a
   line terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para>This member is not CLS-compliant. For a CLS-compliant alternative, use 
   <see cref="M:System.Console.WriteLine" />(<see cref="T:System.Decimal" />).</para>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="value" /> .ToString()).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(string format, object arg0)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">An object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string and a line terminator to
      the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />.
      </para>
        </summary>
        <remarks>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
          <block subset="none" type="note">
            <para>If the specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (1).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(string format, class System.Object[] arg)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object[] arg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg">An array of objects referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string and a new line to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
          <block subset="none" type="note">
            <para>If a specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="format" /> or <paramref name="arg " /> is <see langword="null" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to <paramref name="arg" />.Length .</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(class System.Char[] buffer, int32 index, int32 count)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">The Unicode character array from which data is read. </param>
        <param name="index">A <see cref="T:System.Int32" /> that specifies the index into <paramref name="buffer" /> at which to begin reading. </param>
        <param name="count">A <see cref="T:System.Int32" /> that specifies the number of characters to write. </param>
        <summary>
          <para> Writes a subarray of characters followed by a line
      terminator to the <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
   .
   </para>
        </summary>
        <remarks>
          <para>This version of <see cref="M:System.Console.WriteLine" /> is equivalent to <see cref="P:System.Console.Out" />.<see langword="WriteLine" />(
<paramref name="buffer" />, <paramref name="index" />, <paramref name="count" /> ).</para>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <para>(<paramref name="index" /> + <paramref name="count" /> ) is greater than the length of <paramref name="buffer" />.</para>
        </exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred. </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> or <paramref name="count" /> is negative.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is <see langword="null" />.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(string format, object arg0, object arg1)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">The first object referenced in the format string. </param>
        <param name="arg1">The second object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string and a new line to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
          <block subset="none" type="note">
            <para>If a specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (2).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="ILASM" Value=".method public hidebysig static void WriteLine(string format, object arg0, object arg1, object arg2)" />
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">A <see cref="T:System.String" /> that specifies the format string. </param>
        <param name="arg0">The first object referenced in the format string. </param>
        <param name="arg1">The second object referenced in the format string. </param>
        <param name="arg2">The third object referenced in the format string. </param>
        <summary>
          <para> Writes a formatted string and a new line to the
   <see cref="P:System.Console.Out" /><see cref="T:System.IO.TextWriter" />
.</para>
        </summary>
        <remarks>
          <para> The default line terminator is the value of the <see cref="P:System.Environment.NewLine" qualify="true" />
property. The line terminator can be set using the <see cref="P:System.IO.TextWriter.NewLine" qualify="true" /> property
of the <see cref="P:System.Console.Out" />
stream.</para>
          <block subset="none" type="note">
            <para>If a specified object is not referenced in <paramref name=" format" />, it is ignored.</para>
            <para>For more information on format strings, see the <see cref="T:System.String" /> class overview.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="format" /> is <see langword="null" />.</exception>
        <exception cref="T:System.IO.IOException">An I/O error occurred.</exception>
        <exception cref="T:System.FormatException">
          <para>The format specification in <paramref name="format" /> is invalid.</para>
          <para>-or-</para>
          <para>The number indicating an argument to be formatted is less than zero, or greater than or equal to the number of provided objects to be formatted (3).</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public static void WriteLine (string format, object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WriteLine(string format, object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="arg0">To be added.</param>
        <param name="arg1">To be added.</param>
        <param name="arg2">To be added.</param>
        <param name="arg3">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>
