<Type Name="BadImageFormatException" FullName="System.BadImageFormatException" FullNameSP="System_BadImageFormatException" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public serializable BadImageFormatException extends System.SystemException" />
  <TypeSignature Language="C#" Value="public class BadImageFormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit BadImageFormatException extends System.SystemException" />
  <MemberOfLibrary>RuntimeInfrastructure</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <para>Represents the error that occurs when an attempt is made
      to load a <see cref="T:System.Reflection.Assembly" />
      from a file with an invalid file image.</para>
    </summary>
    <remarks>
      <para> This exception is thrown when the file image of an
      executable program is invalid. For example, this exception is thrown when
      unmanaged code is passed to <see cref="M:System.Reflection.Assembly.Load(System.String)" qualify="true" />
      for loading.</para>
    </remarks>
    <example>
      <para>The following example demonstrates an attempt to load an unmanaged executable, which causes
      the system to throw a <see cref="T:System.BadImageFormatException" /> exception. <block subset="none" type="note">The name of the unmanaged executable
      is "calc".</block></para>
      <code lang="C#">using System;
using System.Reflection;

public class BadImageExample {
  public static void Main() {
    try {
      Assembly a = Assembly.Load("calc");
    } 
    catch (BadImageFormatException e) {
      Console.WriteLine("Caught: {0}", e.Message);
    }
  } 
}
   </code>
      <para>The output is</para>
      <c>
        <para>Caught: The format of the file 'calc' is invalid.</para>
      </c>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor()" />
      <MemberSignature Language="C#" Value="public BadImageFormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.BadImageFormatException" />
class.</para>
        </summary>
        <remarks>
          <para>This constructor initializes the <see cref="P:System.BadImageFormatException.Message" /> property of
   the new instance to a system-supplied message that describes the error, such
   as "Format of the executable or library is invalid." This message takes into
   account the current system culture.</para>
          <para>The <see cref="!:System.BadImageFormatException.InnerException" /> and the <see cref="P:System.BadImageFormatException.FileName" /> properties of the new instance are
initialized to <see langword="null" /> .</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string message)" />
      <MemberSignature Language="C#" Value="public BadImageFormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.BadImageFormatException" />
class.</para>
        </summary>
        <remarks>
          <para>This constructor initializes the <see cref="P:System.BadImageFormatException.Message" /> property of the new instance
   using <paramref name="message" />. If <paramref name="message" /> is
<see langword="null" />, the <see cref="P:System.BadImageFormatException.Message" /> property is initialized to the system-supplied message 
   provided by the constructor that takes no arguments.</para>
          <para> The <see cref="!:System.BadImageFormatException.InnerException" /> and the <see cref="P:System.BadImageFormatException.FileName" /> properties of the new instance are initialized to
<see langword="null" />.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BadImageFormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string message, class System.Exception inner)" />
      <MemberSignature Language="C#" Value="public BadImageFormatException (string message, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception inner) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
        <param name="inner">An instance of <see cref="T:System.Exception" /> that is the cause of the current exception. If <paramref name="inner" /> is non-null, then the current exception was raised in a catch block handling <paramref name="inner" /> .</param>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.BadImageFormatException" />
class.</para>
        </summary>
        <remarks>
          <para>This constructor initializes the <see cref="P:System.BadImageFormatException.Message" /> property of
   the new instance using <paramref name="message" /> and the <see cref="!:System.BadImageFormatException.InnerException" /> property using
<paramref name="inner" />. If <paramref name="message" /> is <see langword="null" />, 
   the <see cref="P:System.BadImageFormatException.Message" /> property is initialized to the system-supplied message
   provided by the constructor that takes no arguments.</para>
          <para>The <see cref="P:System.BadImageFormatException.FileName" /> property of the new instance is initialized to <see langword="null" />.</para>
          <para>
            <block subset="none" type="note">For more information on inner
   exceptions, see <see cref="P:System.Exception.InnerException" />.</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string message, string fileName)" />
      <MemberSignature Language="C#" Value="public BadImageFormatException (string message, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string fileName) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
        <param name="fileName">A <see cref="T:System.String" /> containing the name of the file with the invalid image.</param>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.BadImageFormatException" />
class.</para>
        </summary>
        <remarks>
          <para>This constructor initializes the <see cref="P:System.BadImageFormatException.Message" /> property of the new instance
   using <paramref name="message" /> and the <see cref="P:System.BadImageFormatException.FileName" /> property using
<paramref name="fileName" /> . If <paramref name="message" /> is 
<see langword="null" />, the <see cref="P:System.BadImageFormatException.Message" /> property is initialized to the system-supplied message 
   provided by the constructor that takes no arguments. </para>
          <para> The <see cref="!:System.BadImageFormatException.InnerException" /> property of the
new instance is initialized to <see langword="null" />
.</para>
          <para>If the <paramref name="fileName" /> parameter is <see langword="null" />, the <see cref="P:System.BadImageFormatException.FileName" /> property is set
to <see langword="null" />, the <see cref="P:System.BadImageFormatException.Message" /> property does not contain the name of the file, and the <see cref="M:System.BadImageFormatException.ToString" />
method does not return the name of the file with the invalid
image.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(string message, string fileName, class System.Exception inner)" />
      <MemberSignature Language="C#" Value="public BadImageFormatException (string message, string fileName, Exception inner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, string fileName, class System.Exception inner) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="inner" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">A <see cref="T:System.String" /> that describes the error. The content of <paramref name="message" /> is intended to be understood by humans. The caller of this constructor is required to ensure that this string has been localized for the current system culture.</param>
        <param name="fileName">A <see cref="T:System.String" /> containing the name of the file with the invalid image.</param>
        <param name="inner">An instance of <see cref="T:System.Exception" /> that is the cause of the current exception. If <paramref name="inner" /> is non-null, then the current exception was raised in a catch block handling <paramref name="inner" /> .</param>
        <param name="fileName">To be added.</param>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.BadImageFormatException" />
class.</para>
        </summary>
        <remarks>
          <para>This constructor initializes the <see cref="P:System.BadImageFormatException.Message" /> property of
   the new instance using <paramref name="message" />, the <see cref="!:System.BadImageFormatException.InnerException" /> property
   using <paramref name="inner" />, and the <see cref="P:System.BadImageFormatException.FileName" /> property using <paramref name="fileName" />. If <paramref name="message" /> is <see langword="null" />,
   the <see cref="P:System.BadImageFormatException.Message" /> property is initialized to the system-supplied message
   provided by the constructor that takes no arguments.</para>
          <block subset="none" type="note">
            <para>If the <paramref name="fileName" /> parameter is <see langword="null" />, the <see cref="P:System.BadImageFormatException.FileName" /> property is set to
<see langword="null" />, the <see cref="P:System.BadImageFormatException.Message" /> property does not contain the 
   name of the file, and the <see cref="M:System.BadImageFormatException.ToString" /> method does not return the name
   of the file with the invalid image.</para>
            <para>For more information on inner
   exceptions, see <see cref="P:System.Exception.InnerException" />.</para>
          </block>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="ILASM" Value=".property string FileName { public hidebysig specialname instance string get_FileName() }" />
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets the name of the file with the invalid image.</para>
        </summary>
        <value>
          <para>A <see cref="T:System.String" /> containing the
   name of the file with the invalid image, or <see langword="null" /> if no file
   name was passed to the constructor for the current instance.</para>
        </value>
        <remarks>
          <para>This property is read-only.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="FusionLog">
      <MemberSignature Language="C#" Value="public string FusionLog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FusionLog" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="ILASM" Value=".property string Message { public hidebysig virtual specialname string get_Message() }" />
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets a <see cref="T:System.String" /> that describes the error that caused the current exception.</para>
        </summary>
        <value>
          <para>A <see cref="T:System.String" /> containing the
   error description.</para>
        </value>
        <remarks>
          <para>If no message was supplied to the constructor for the 
      current exception, this property returns a system-supplied error message.
      If the <see cref="P:System.BadImageFormatException.FileName" /> property is not <see langword="null" /> ,
      the message includes the file name.</para>
          <para> This property is read-only.</para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual string ToString()" />
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns a <see cref="T:System.String" /> representation of the value of the current exception.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.String" />
representation of the current exception.</para>
        </returns>
        <remarks>
          <para>The string representation returned by this method 
      includes the name of the exception, the value of the <see cref="P:System.BadImageFormatException.Message" />
      property, the result of calling <see langword="ToString " />on the inner exception, the value of the
   <see cref="P:System.BadImageFormatException.FileName" /> 
   property, and the result of calling <see cref="P:System.Environment.StackTrace" />.
   If any of these members is <see langword="null" />, its value is not included in
   the returned string.
   </para>
          <para>
            <block subset="none" type="note">This method overrides <see cref="M:System.Exception.ToString" />
.</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>
