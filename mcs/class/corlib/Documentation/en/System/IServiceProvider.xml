<Type Name="IServiceProvider" FullName="System.IServiceProvider">
  <TypeSignature Maintainer="auto" Language="C#" Value="public interface IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Interfaces />
  <Docs>
    <summary>This interface is used to query for instances of objects based on a Type.</summary>
    <remarks>This interface provides a mechanism to fetch instances to objects of a given <see cref="T:System.Type" /> from classes that implement this interface.

For example the <see cref="T:System.Web.HttpContext" /> class implements this and allows fething a few fields that are not exposed by its properties.  


<para>
A typical implementation will look like this:
</para><example><code lang="C#">
 		object IServiceProvider.GetService (Type service)
		{
			if (service == typeof (Something))
				return something;
			if (service == typeof (DateTime))
				return my_date_time;
		}
  </code></example></remarks>
  </Docs>
  <Members>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">To be added: an object of type 'Type'</param>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'object'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
