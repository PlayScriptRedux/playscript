<Type Name="ArgIterator" FullName="System.ArgIterator">
  <TypeSignature Maintainer="auto" Language="C#" Value="public struct ArgIterator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ArgIterator extends System.ValueType" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadSafetyStatement>Gtk# is thread aware, but not thread safe; See the &lt;link location="node:gtk-sharp/programming/threads"&gt;Gtk# Thread Programming&lt;/link&gt; for details.</ThreadSafetyStatement>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>This class is used to acess variable arguments on methods that use the __arglist calling convention.</summary>
    <remarks>To be added</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgIterator (RuntimeArgumentHandle arglist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.RuntimeArgumentHandle arglist) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="arglist" Type="System.RuntimeArgumentHandle" />
      </Parameters>
      <Docs>
        <param name="arglist">The handle to the argument list, as obtained by the special compiler __arglist expression.</param>
        <summary>Creates an ArgIterator from a RuntimeArgumentHandle.</summary>
        <remarks>Here is an example of a routine that uses the __arglist calling conventions:


<example><code lang="C#">
using System;

class ArgIteratorDemo {

        static int AddABunchOfInts (__arglist)
        {
                int result = 0;

                System.ArgIterator iter = new System.ArgIterator (__arglist);
                int argCount = iter.GetRemainingCount();

                for (int i = 0; i &lt; argCount; i++) {
                        System.TypedReference typedRef = iter.GetNextArg();
                        result += (int)TypedReference.ToObject( typedRef );
                }

                return result;
        }

        static void Main (string[] args)
        {
                int result = AddABunchOfInts (__arglist ( 2, 3, 4 ));
                Console.WriteLine ("Answer: {0}", result);
	}
}
  </code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgIterator (RuntimeArgumentHandle arglist, void* ptr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.RuntimeArgumentHandle arglist, void* ptr) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue />
      <Parameters>
        <Parameter Name="arglist" Type="System.RuntimeArgumentHandle" />
        <Parameter Name="ptr" Type="System.Void*" />
      </Parameters>
      <Docs>
        <param name="arglist">The argument list, as obtained by the special compiler keyword __arglist.</param>
        <param name="ptr">Overrides the starting address for computing parameters.</param>
        <summary>Initialize an ArgIterator using a base address.</summary>
        <remarks>Here is an example of a routine that uses the __arglist calling conventions:


<example><code lang="C#">
using System;

class ArgIteratorDemo {

        static int AddABunchOfInts (__arglist)
        {
                int result = 0;

                System.ArgIterator iter = new System.ArgIterator (__arglist);
                int argCount = iter.GetRemainingCount();

                for (int i = 0; i &lt; argCount; i++) {
                        System.TypedReference typedRef = iter.GetNextArg();
                        result += (int)TypedReference.ToObject( typedRef );
                }

                return result;
        }

        static void Main (string[] args)
        {
                int result = AddABunchOfInts (__arglist ( 2, 3, 4 ));
                Console.WriteLine ("Answer: {0}", result);
	}
}
  </code></example></remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public void End ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void End() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finishes iterating over the arguments.</summary>
        <remarks>Invalidates the ArgIterator instance, from this point on operations will throw an exception.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextArg">
      <MemberSignature Language="C#" Value="public TypedReference GetNextArg ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypedReference GetNextArg() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypedReference</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the next argument.</summary>
        <returns>Returns the next argument as a <see cref="T:System.TypedReference" />.</returns>
        <remarks>This advances the position of the argument iterator.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextArg">
      <MemberSignature Language="C#" Value="public TypedReference GetNextArg (RuntimeTypeHandle rth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypedReference GetNextArg(valuetype System.RuntimeTypeHandle rth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypedReference</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rth" Type="System.RuntimeTypeHandle" />
      </Parameters>
      <Docs>
        <param name="rth">To be added: an object of type 'RuntimeTypeHandle'</param>
        <summary>To be added</summary>
        <returns>To be added: an object of type 'TypedReference'</returns>
        <remarks>To be added</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextArgType">
      <MemberSignature Language="C#" Value="public RuntimeTypeHandle GetNextArgType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.RuntimeTypeHandle GetNextArgType() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeTypeHandle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the type of the next argument.</summary>
        <returns>To be added: an object of type 'RuntimeTypeHandle'</returns>
        <remarks>This does not advance the current position in the iterator.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRemainingCount">
      <MemberSignature Language="C#" Value="public int GetRemainingCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRemainingCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of remaining arguments to be processed.</summary>
        <returns>The count of arguments remaining to be processed.</returns>
        <remarks />
      </Docs>
    </Member>
  </Members>
</Type>
