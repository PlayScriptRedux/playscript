<Type Name="TimerCallback" FullName="System.Threading.TimerCallback" FullNameSP="System_Threading_TimerCallback" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public sealed serializable TimerCallback extends System.Delegate" />
  <TypeSignature Language="C#" Value="public delegate void TimerCallback(object state);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed TimerCallback extends System.MulticastDelegate" />
  <MemberOfLibrary>BCL</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="state" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="state">A <see cref="T:System.Object" /> containing application-specific information relevant to the methods invoked by instances of this delegate, or <see langword="null" /> . </param>
    <summary>
      <para> Defines the shape of methods that are called by an instance of
      the <see cref="T:System.Threading.Timer" /> class.
      </para>
    </summary>
    <remarks>
      <para>A <see langword="TimerCallback" /> delegate invokes its
   methods once after the start time elapses, and continues invoking its methods
   once per period until the <see cref="M:System.Threading.Timer.Dispose(System.Threading.WaitHandle)" qualify="true" /> method is called. <block subset="none" type="note">The start time for a <see cref="T:System.Threading.Timer" /> is passed in the <paramref name="dueTime" />
   parameter of the <see langword=" Timer" /> constructors, and the period
   is passed via the <paramref name="period" /> parameter. </block></para>
      <para>
        <block subset="none" type="note">For an example that
   demonstrates creating and using a <see langword=" TimerCallback" />
   delegate, see the <see cref="T:System.Threading.Timer" />
   class.</block>
      </para>
    </remarks>
  </Docs>
  <Members />
  <TypeExcluded>0</TypeExcluded>
</Type>
