<Type Name="DnsPermission" FullName="System.Net.DnsPermission" FullNameSP="System_Net_DnsPermission" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public serializable DnsPermission extends System.Security.CodeAccessPermission" />
  <TypeSignature Language="C#" Value="public sealed class DnsPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit DnsPermission extends System.Security.CodeAccessPermission implements class System.Security.Permissions.IUnrestrictedPermission" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Security.CodeAccessPermission</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Permissions.IUnrestrictedPermission</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <para> Controls access to Domain Name System (DNS) servers on the
      network.</para>
    </summary>
    <remarks>
      <para> The XML encoding of a <see cref="T:System.Net.DnsPermission" /> instance is defined below in
      EBNF format. The following conventions are used:</para>
      <list type="bullet">
        <item>
          <term>
            <para> All non-literals in the grammar below are shown in normal type.</para>
          </term>
        </item>
        <item>
          <term>
            <para> All literals are in bold font. </para>
          </term>
        </item>
      </list>
      <para> The following meta-language symbols are used: </para>
      <list type="bullet">
        <item>
          <term>
            
            '*' represents a meta-language symbol suffixing an
            expression that can appear zero or more times.</term>
        </item>
        <item>
          <term>
            
            '?' represents a meta-language symbol suffixing an
            expression that can appear zero or one time.</term>
        </item>
        <item>
          <term>
            
            '+' represents a meta-language symbol suffixing an
            expression that can appear one or more times.</term>
        </item>
        <item>
          <term>
            
            '(',')' is used to group literals, non-literals or a
            mixture of literals and non-literals.</term>
        </item>
        <item>
          <term>
            
            '|' denotes an exclusive disjunction between two
            expressions.</term>
        </item>
        <item>
          <term>
            
            '::= ' denotes a production rule where a left hand
            non-literal is replaced by a right hand expression containing literals,
            non-literals or both.</term>
        </item>
      </list>
      <para>BuildVersion refers to the build version of the shipping CLI. This is a
      dotted build number such as '2412.0' . </para>
      <para>ECMAPubKeyToken ::= <see langword="b77a5c561934e089" /></para>
      <c>
        <para>DnsPermissionXML ::= </para>
        <para>
          <see langword="&lt;IPermission" />
        </para>
        <para>
          <see langword="class=&quot; " />
        </para>
        <para>
          <see langword="System.Net.DnsPermission, " />
        </para>
        <para>
          <see langword="System, " />
        </para>
        <para>
          <see langword="Version=1.0." />BuildVersion<see langword="," /></para>
        <para>
          <see langword="Culture=neutral," />
        </para>
        <para>
          <see langword="PublicKeyToken=" />ECMAPubKeyToken<see langword="&quot; " /></para>
        <para>
          <see langword="version=&quot;1&quot; " />
        </para>
        <para>(</para>
        <para>
          <see langword="Unrestricted=&quot;true&quot;/&gt; " />
        </para>
        <para>)</para>
        <para>|<see langword=" /&gt;" /></para>
      </c>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="public rtspecialname specialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state)" />
      <MemberSignature Language="C#" Value="public DnsPermission (System.Security.Permissions.PermissionState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Permissions.PermissionState state) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters>
        <Parameter Name="state" Type="System.Security.Permissions.PermissionState" />
      </Parameters>
      <Docs>
        <param name="state">
          <para>A <see cref="T:System.Security.Permissions.PermissionState" /> value. </para>
        </param>
        <summary>
          <para>Constructs and initializes a new instance of the <see cref="T:System.Net.DnsPermission" /> class with the specified <see cref="T:System.Security.Permissions.PermissionState" />
value.</para>
        </summary>
        <remarks>
          <block subset="none" type="note">
            <para>This constructor creates either fully restricted (<see cref="F:System.Security.Permissions.PermissionState.None" />) 
      or <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /> access to DNS
      information.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> is not a valid <see cref="T:System.Security.Permissions.PermissionState" /> value.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual class System.Security.IPermission Copy()" />
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Copy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns a new <see cref="T:System.Net.DnsPermission" /> object containing the same values as the current
   instance.</para>
        </summary>
        <returns>
          <para> A new <see cref="T:System.Net.DnsPermission" /> instance containing the same values as the current instance.
   </para>
        </returns>
        <remarks>
          <block subset="none" type="note">
            <para>The object returned by this method represents the same access to DNS information as
         the current instance.</para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.Copy" qualify="true" /> and is implemented to
      support the <see cref="T:System.Security.IPermission" /> interface.</para>
          </block>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual void FromXml(class System.Security.SecurityElement securityElement)" />
      <MemberSignature Language="C#" Value="public override void FromXml (System.Security.SecurityElement securityElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void FromXml(class System.Security.SecurityElement securityElement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
      </Parameters>
      <Docs>
        <param name="securityElement">A <see cref="T:System.Security.SecurityElement" /> instance containing the XML encoding to use to reconstruct the state of a <see cref="T:System.Net.DnsPermission" /> object.</param>
        <summary>
          <para>Reconstructs the state of a <see cref="T:System.Net.DnsPermission" /> object using the specified XML encoding.</para>
        </summary>
        <remarks>
          <para>The state of the current instance is changed to the state encoded in
 <paramref name="securityElement" />.</para>
          <block subset="none" type="note">
            <para>For the XML encoding for this class, see the <see cref="T:System.Net.DnsPermission" /> class
 page.</para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.FromXml(System.Security.SecurityElement)" qualify="true" /> .</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <para>
            <paramref name="securityElement " />is <see langword="null" /></para>
        </exception>
        <exception cref="T:System.ArgumentException">
          <para>
            <paramref name="securityElement " />is not a <see cref="T:System.Net.DnsPermission" /> element.</para>
        </exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual class System.Security.IPermission Intersect(class System.Security.IPermission target)" />
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Intersect (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Intersect(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A <see cref="T:System.Net.DnsPermission" /> instance to intersect with the current instance.</param>
        <summary>
          <para>Returns a new <see cref="T:System.Net.DnsPermission" /> object that is the intersection of the current
   instance and the specified object. </para>
        </summary>
        <returns>
          <para>A new <see cref="T:System.Net.DnsPermission" /> instance that represents the intersection of the
   current instance and <paramref name="target" />. If the intersection is
   empty, returns <see langword="null" />. If the
   current instance is unrestricted, returns a copy of <paramref name="target" />. If
<paramref name="target" /> is unrestricted, returns a copy of 
   the current instance.</para>
        </returns>
        <remarks>
          <block subset="none" type="note">
            <para>The intersection of two permissions is a permission that secures the
         resources and operations secured by both permissions. Specifically, it
         represents the minimum permission such that any demand that passes both
         permissions will also pass their intersection.</para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.Intersect(System.Security.IPermission)" qualify="true" /> and is implemented to
      support the <see cref="T:System.Security.IPermission" /> interface.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target " />is <see langword="null" />.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="IsSubsetOf">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual bool IsSubsetOf(class System.Security.IPermission target)" />
      <MemberSignature Language="C#" Value="public override bool IsSubsetOf (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsSubsetOf(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A <see cref="T:System.Net.DnsPermission" /> instance that is to be tested for the subset relationship.</param>
        <summary>
          <para>Determines whether the current instance is a subset of the specified
      object.</para>
        </summary>
        <returns>
          <para>
            <see langword="true" /> if the current instance is a
   subset of <paramref name="target" /> ; otherwise,<see langword=" false" />. If the current
   instance is unrestricted, and <paramref name="target" /> is not, returns
<see langword="false" />. If <paramref name="target" /> is unrestricted, returns 
<see langword="true" />. If <paramref name="target" /> is <see langword="null" /> , returns 
<see langword="false" />.</para>
        </returns>
        <remarks>
          <block subset="none" type="note">
            <para>The current instance is a subset of <paramref name="target" /> if the current instance
      specifies a set of accesses to resources that is wholly contained by
   <paramref name="target" />. For example, a permission that represents read access to a file
      is a subset of a permission that represents read and write access to the file. </para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.IsSubsetOf(System.Security.IPermission)" qualify="true" /> and is implemented to
   support the <see cref="T:System.Security.IPermission" /> interface.</para>
          </block>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="IsUnrestricted">
      <MemberSignature Language="C#" Value="public bool IsUnrestricted ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUnrestricted() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual class System.Security.SecurityElement ToXml()" />
      <MemberSignature Language="C#" Value="public override System.Security.SecurityElement ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.SecurityElement ToXml() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Returns the XML encoding of the current instance.</para>
        </summary>
        <returns>
          <para>A <see cref="T:System.Security.SecurityElement" /> containing the XML encoding of the state of the
   current instance.</para>
        </returns>
        <remarks>
          <block subset="none" type="note">
            <para>For the XML encoding for this class, see the <see cref="T:System.Net.DnsPermission" /> class page.</para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.ToXml" qualify="true" /> .</para>
          </block>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="ILASM" Value=".method public hidebysig virtual class System.Security.IPermission Union(class System.Security.IPermission target)" />
      <MemberSignature Language="C#" Value="public override System.Security.IPermission Union (System.Security.IPermission target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.IPermission Union(class System.Security.IPermission target) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.IPermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Security.IPermission" />
      </Parameters>
      <Docs>
        <param name="target">A <see cref="T:System.Net.DnsPermission" /> instance to combine with the current instance.</param>
        <summary>
          <para>Returns a new <see cref="T:System.Net.DnsPermission" /> object that is the union of the current instance and
   the specified object.</para>
        </summary>
        <returns>
          <para>A new <see cref="T:System.Net.DnsPermission" /> instance that represents the union of the 
   current instance and
<paramref name="target" />. If the current instance or <paramref name="target" /> is unrestricted, 
   returns a <see cref="T:System.Net.DnsPermission" /> instance that is unrestricted.</para>
        </returns>
        <remarks>
          <block subset="none" type="note">
            <para>The result of a call to <see cref="M:System.Net.DnsPermission.Union(System.Security.IPermission)" /> is a permission that represents all of
      the access to permissions represented by the current instance as well as the
      permissions represented by <paramref name="target" />. Any demand that passes either the
      current instance or <paramref name="target " />passes their union.</para>
            <para>This method overrides <see cref="M:System.Security.CodeAccessPermission.Union(System.Security.IPermission)" qualify="true" /> and is implemented to
   support the <see cref="T:System.Security.IPermission" /> interface.</para>
          </block>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="target " />is <see langword="null" />.</exception>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>
