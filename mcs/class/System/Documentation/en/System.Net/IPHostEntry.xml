<Type Name="IPHostEntry" FullName="System.Net.IPHostEntry" FullNameSP="System_Net_IPHostEntry" Maintainer="ecma">
  <TypeSignature Language="ILASM" Value=".class public IPHostEntry extends System.Object" />
  <TypeSignature Language="C#" Value="public class IPHostEntry" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IPHostEntry extends System.Object" />
  <MemberOfLibrary>Networking</MemberOfLibrary>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyPublicKey>[00 00 00 00 00 00 00 00 04 00 00 00 00 00 00 00 ]</AssemblyPublicKey>
    <AssemblyVersion>1.0.x.x</AssemblyVersion>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <ThreadingSafetyStatement>All public static members of this type are safe for multithreaded operations. No instance members are guaranteed to be thread safe.</ThreadingSafetyStatement>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <para>Provides a container class for Internet host address information.</para>
    </summary>
    <remarks>
      <para>The <see cref="T:System.Net.IPHostEntry" /> class associates a Domain Name System (DNS) host
   name with an array of aliases and an array of matching IP addresses.</para>
    </remarks>
    <example>
      <para> The following example queries the DNS database for information
      on the host "www.contoso.com" and
      displays the information in the
      returned <see cref="T:System.Net.IPHostEntry" /> instance.</para>
      <code lang="C#">using System;
using System.Net;

public class IPHostEntryTest {
 public static void Main() {
 
 IPHostEntry hostInfo = Dns.GetHostByName("www.contoso.com");

 string[] aliases = hostInfo.Aliases;
 IPAddress[] addresses = hostInfo.AddressList;
 
 Console.WriteLine("The host name is: {0}", hostInfo.HostName);

 for(int x = 0; x &lt; aliases.Length; x++)
 Console.WriteLine("Alias {0} == {1}", aliases[x], addresses[x]);
 }
}
   </code>
      <para>The output is</para>
      <c>
        <para>The host name is: contoso.com</para>
        <para>Alias www.contoso.com == 207.46.230.186 </para>
      </c>
    </example>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="ILASM" Value="family specialname instance void .ctor()" />
      <MemberSignature Language="C#" Value="public IPHostEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue />
      <Parameters />
      <Docs>
        <summary>Constructs a new instance of the <see cref="T:System.Net.IPHostEntry" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="AddressList">
      <MemberSignature Language="ILASM" Value=".property class System.Net.IPAddress[] AddressList { public hidebysig specialname instance class System.Net.IPAddress[] get_AddressList() public hidebysig specialname instance void set_AddressList(class System.Net.IPAddress[] value) }" />
      <MemberSignature Language="C#" Value="public System.Net.IPAddress[] AddressList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IPAddress[] AddressList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IPAddress[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets or sets a list of IP addresses associated with a host.</para>
        </summary>
        <value>
          <para> A <see cref="T:System.Net.IPAddress" /> array containing IP addresses that resolve
 to the host names contained in the <see cref="P:System.Net.IPHostEntry.Aliases" />
 property. </para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="Aliases">
      <MemberSignature Language="ILASM" Value=".property class System.String[] Aliases { public hidebysig specialname instance class System.String[] get_Aliases() public hidebysig specialname instance void set_Aliases(class System.String[] value) }" />
      <MemberSignature Language="C#" Value="public string[] Aliases { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] Aliases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>Gets or sets a list of aliases associated with a host.</para>
        </summary>
        <value>
          <para> A <see cref="T:System.String" /> array containing DNS names that resolve to the IP addresses
 in the <see cref="P:System.Net.IPHostEntry.AddressList" /> property.</para>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
    <Member MemberName="HostName">
      <MemberSignature Language="ILASM" Value=".property string HostName { public hidebysig specialname instance string get_HostName() public hidebysig specialname instance void set_HostName(string value) }" />
      <MemberSignature Language="C#" Value="public string HostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para> Gets or sets the DNS
      name of the host.</para>
        </summary>
        <value>
          <para>A <see cref="T:System.String" /> containing the DNS host name that corresponds to
   the address and alias information contained in the current instance.</para>
        </value>
        <remarks>
          <para>
            <block subset="none" type="note">The <see cref="P:System.Net.IPHostEntry.HostName" /> property contains the primary host name for
   a server. If the DNS entry for the host defines additional aliases, they are
   available via the <see cref="P:System.Net.IPHostEntry.Aliases" />
   property.</block>
          </para>
        </remarks>
      </Docs>
      <Excluded>0</Excluded>
    </Member>
  </Members>
  <TypeExcluded>0</TypeExcluded>
</Type>
