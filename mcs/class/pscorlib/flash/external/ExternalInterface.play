// Copyright 2013 Zynga Inc.
//	
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//		
//      Unless required by applicable law or agreed to in writing, software
//      distributed under the License is distributed on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//      See the License for the specific language governing permissions and
//      limitations under the License.

package flash.external {

	import System.Collections.Generic.*;

	public static class ExternalInterface {

		public static var CallFunc:System.Func.<String, Array, Object> = null;

		public static function get available():Boolean {
			return (CallFunc != null);
		}

		public static function call(method:String, ...args):Object{
			if (CallFunc != null) {
				return CallFunc(method, args);
			} else {
				trace("warning: ExternalInterface.call not registered for method " + method);
				return null;
			}
		}

		public static function addCallback(method:String, f:Function):void{
			sCallbacks[method] = f;
		}

		public static function externalInvokeCallback(method:String, args:Array):Object{
			var f:Function;
			if (sCallbacks.TryGetValue(method, out f)){
				return f(args);
			} else {
				// callback not registered
				trace("warning: ExternalInterface.addCallback not registered: ", method);
				return null;
			}
		}

		private static var sCallbacks:Dictionary.<String, Function> = new Dictionary.<String, Function>();
	}
	
}
