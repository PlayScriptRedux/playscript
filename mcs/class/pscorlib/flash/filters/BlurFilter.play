// Copyright 2013 Zynga Inc.
//	
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//		
//      Unless required by applicable law or agreed to in writing, software
//      distributed under the License is distributed on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//      See the License for the specific language governing permissions and
//      limitations under the License.

package flash.filters {
	
	public class BlurFilter extends BitmapFilter
	{

		public function BlurFilter(blurX:Number = 4.0, blurY:Number = 4.0, quality:int = 1):void
		{
		}

		public var blurX:Number;
		public var blurY:Number;
		public var quality:Number;
	}


	public class BevelFilter extends BitmapFilter
	{
		// $$TODO -- these are stubbed out
		public function BevelFilter(distance:Number = 4.0, angle:Number = 45, highlightColor:uint = 0xFFFFFF, highlightAlpha:Number = 1.0, shadowColor:uint = 0x000000, shadowAlpha:Number = 1.0, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, quality:int = 1, type:String = "inner", knockout:Boolean = false)
		{
			throw new System.NotImplementedException();
		}
	
		public var blurX:Number;
		public var blurY:Number;
		public var strength:Number;
		public var color:uint;
		public var alpha:Number;
		public var quality:Number;
		public var angle:Number;
		public var highlightAlpha:Number;
		public var highlightColor:uint;
		public var shadowAlpha:Number;
		public var shadowColor:uint;
		public var distance:Number;
		public var type:String;
	}

	public class GradientBevelFilter extends BitmapFilter
	{
		//$$TODO -- these are stubbed out
		public function GradientBevelFilter(distance:Number = 4.0, angle:Number = 45, colors:Array = null, alphas:Array = null, ratios:Array = null, 
		                    blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, quality:int = 1, type:String = "inner", 
		                    knockout:Boolean = false) {
		}

		public var alphas:Array;
		public var angle:Number;
		public var blurX:Number;
		public var blurY:Number;
		public var colors:Array;
		public var distance:Number;
		public var knockout:Boolean;
		public var quality:int;
		public var ratios:Array;
		public var strength:Number;
		public var type:String;
	}

	
	public class DropShadowFilter extends BitmapFilter
	{
		// $$TODO -- these are stubbed out
		public function DropShadowFilter(distance:Number = 4.0, angle:Number = 45, color:uint = 0, alpha:Number = 1.0, 
		                                 blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1.0, quality:int = 1, 
		                                 inner:Boolean = false, knockout:Boolean = false, hideObject:Boolean = false)
		{
			throw new System.NotImplementedException();
		}
		
		public var blurX:Number;
		public var blurY:Number;
		public var strength:Number;
		public var color:uint;
		public var alpha:Number;
		public var quality:Number;
		public var angle:Number;
		public var highlightAlpha:Number;
		public var highlightColor:uint;
		public var shadowAlpha:Number;
		public var shadowColor:uint;
		public var distance:Number;
		public var inner:Boolean;
		public var knockout:Boolean;
		public var hideObject:Boolean;
	}
	
	public class GlowFilter extends BitmapFilter
	{
		// $$TODO -- these are stubbed out
		public function GlowFilter(color:uint = 0xFF0000, alpha:Number = 1.0, blurX:Number = 6.0, blurY:Number = 6.0, strength:Number = 2, quality:int = 1, inner:Boolean = false, knockout:Boolean = false)
		{
			throw new System.NotImplementedException();
		}

		public var blurX:Number;
		public var blurY:Number;
		public var strength:Number;
		public var color:Number;
		public var alpha:Number;
		public var quality:Number;
		public var inner:Boolean;
		public var knockout:Boolean;
		//$$TODO
	}

	public class GradientGlowFilter extends BitmapFilter
	{
		//$$TODO - these are stubbed out
		public function GradientGlowFilter(distance:Number = 4.0, angle:Number = 45, colors:Array = null, alphas:Array = null, ratios:Array = null, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, 
		                   quality:int = 1, type:String = "inner", knockout:Boolean = false)
		{
			throw new System.NotImplementedException();
		}

		public var alphas:Array;
		public var angle:Number;
		public var blurX:Number;
		public var blurY:Number;
		public var colors:Array;
		public var distance:Number;
		public var knockout:Boolean;
		public var quality:int;
		public var ratios:Array;
		public var strength:Number;
		public var type:String;

	}

}

