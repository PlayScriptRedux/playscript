// Copyright 2013 Zynga Inc.
//	
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//		
//      Unless required by applicable law or agreed to in writing, software
//      distributed under the License is distributed on an "AS IS" BASIS,
//      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//      See the License for the specific language governing permissions and
//      limitations under the License.

package flash.display {

	import flash.display3D.*;
	import flash.geom.Rectangle;
	import flash.events.*;
	import flash.utils.Timer;

	import System.IntPtr;

	public class Stage3D extends EventDispatcher {
	
		//
		// Properties
		//
		
		public property context3D : Context3D { get { return mContext3D; } }

 	 	public property visible : Boolean { get; set; }
 
	 	public property x : Number { get; set; }

 	 	public property y : Number { get; set; }
 	 	
 	 	public property viewPort : Rectangle {get; set;}

		// set to true to allow discard instruction to be emitted
		public static var allowDiscard:Boolean = true;

		//
		// Methods
		//

		public function Stage3D() {
		}
		
		public function requestContext3D(context3DRenderMode:String = "auto", profile:String = "baseline"):void {
			// create context with a delay
			var timer:Timer = new Timer(1, 1);
			timer.addEventListener(TimerEvent.TIMER, doCreateContext);
			timer.start();
		}
		
		
		private function doCreateContext(te:Event):void
		{
			if (mContext3D==null) {
				// create context 
				mContext3D = new Context3D(this);
			}
			
			// this may need to be deferred an additional frame
			var e:Event = new Context3DCreateEvent(this);
			this.dispatchEvent(e);
		}
		
		
		private var mContext3D:Context3D;
	}

	class Context3DCreateEvent extends Event
	{
		public function Context3DCreateEvent(t:Stage3D)
		{
			super(Event.CONTEXT3D_CREATE);
			_target = t;
		}
	};
 	 	
}

